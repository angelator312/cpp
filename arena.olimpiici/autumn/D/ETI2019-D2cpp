#include <bits/stdc++.h>
using namespace std;
using pr = pair<int, int>;
using LL = long long;
const int N = 2e7 + 1;
const int A = 126 + 2;
const int LENNUMBER = 6 + 1;
short whereV1[LENNUMBER], brV1 = -1;
short whereV2[LENNUMBER], brV2 = -1;
short whereV3[LENNUMBER], brV3 = -1;
string s;
int n, m, br = -1;

bool isNotZnak(char e) // ne hvashta ?
{
  return !(e == '*' || e == '-' || e == '+' || e == '=');
}
//-----------------------------------------------------
string changeToNum(char &num, short whereVr[], short &br, string &a) {
  string b = a;
  for (int i = 0; i <= br; i++) {
    // cout << whereVr[i] << endl;
    b[whereVr[i]] = num;
  }
  return b;
}
//-----------------------------------------------------
void fillWhere(short whereV[], short &brV, int &i, int start) {
  for (; isNotZnak(s[i]) && i < n; i++) {
    if (s[i] < '0' || s[i] > '9') {
      // cout<<s[i]<<" ";
      whereV[++brV] = i - start;
    }
  }
  // cout<<endl;
}
//-----------------------------------------------------

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(nullptr);
  cout.tie(nullptr);

  cin >> s;
  n = s.size();
  int i = 0;
  bool firstPolozhitelno = 1;
  bool secondPolozhitelno = 1;
  bool thirdPolozhitelno = 1;
  if (!isNotZnak(s[i])) {
    firstPolozhitelno = 0;
    i++;
  }
  int startFirstNumber = i; // i ne e znak
  fillWhere(whereV1, brV1, i, startFirstNumber);
  int endFirstNumber = i; // i e znak
  string chislo = s.substr(startFirstNumber, endFirstNumber - startFirstNumber);

  char znak = s[i];
  i++; // i veche e към числото
  if (!isNotZnak(s[i])) {
    secondPolozhitelno = 0;
    i++;
  }
  int startSecondNumber = i; // i ne e znak
  fillWhere(whereV2, brV2, i, startSecondNumber);
  int endSecondNumber = i; // i e znak=
  // cout<<startSecondNumber<<" "<<endSecondNumber<<endl;
  string chislo2 =
      s.substr(startSecondNumber, endSecondNumber - startSecondNumber);
  i++;
  // cout << n << endl;
  if (!isNotZnak(s[i])) {
    thirdPolozhitelno = 0;
    i++;
  }
  // cout << n << endl;
  int startThirdNumber = i; // i ne e znak
  //    string chislo3=s.substr(i);
  fillWhere(whereV3, brV3, i, startThirdNumber);
  int endThirdNumber = i; // i ne e znak
  string chislo3 =
      s.substr(startThirdNumber, endThirdNumber - startThirdNumber);
  // cout << chislo << znak << chislo2 << " " << chislo3 << endl;
  int n1 = endFirstNumber - startFirstNumber;
  int n2 = endSecondNumber - startSecondNumber;
  int n3 = endThirdNumber - startThirdNumber;
  if (znak == '-' && firstPolozhitelno + secondPolozhitelno == 1) {
    secondPolozhitelno = 1;
    firstPolozhitelno = 1;
    znak = '+';
  }
  /*if (znak == '+' && firstPolozhitelno == 0 && secondPolozhitelno == 0 &&
      thirdPolozhitelno == 1) {
    cout << "mistake" << endl;
    return 0;
  }
  if (znak == '+' && firstPolozhitelno == 1 && secondPolozhitelno == 1 &&
      thirdPolozhitelno == 0) {
    cout << "mistake" << endl;
    return 0;
  }
  if (znak == '*' && firstPolozhitelno == 0 && secondPolozhitelno == 0 &&
      thirdPolozhitelno == 0) {
    cout << "mistake" << endl;
    return 0;
  }*/
  if (znak == '*' && firstPolozhitelno == 1 && secondPolozhitelno == 1 &&
      thirdPolozhitelno == 0) {
    cout << "mistake" << endl;
    return 0;
  }
  if (znak == '*' &&
      firstPolozhitelno + secondPolozhitelno == 1 && // ednotot e - drugoto +
      thirdPolozhitelno == 1) {
    cout << "mistake" << endl;
    return 0;
  }
  for (int i = 0; i < 10; i++) {
    char e = i + '0';
    string ch = changeToNum(e, whereV1, brV1, chislo);
    string ch2 = changeToNum(e, whereV2, brV2, chislo2);
    string ch3 = changeToNum(e, whereV3, brV3, chislo3);
    if (ch[0] == '0' && n1 > 1)
      continue;
    if (ch2[0] == '0' && n2 > 1)
      continue;
    if (ch3[0] == '0' && n3 > 1)
      continue;
    // cout<<ch<<znak<<ch2<<" "<<ch3<<endl;
    if (znak == '+') {
      if (stoi(ch) + stoi(ch2) == stoi(ch3)) {
        cout << i << endl;
        return 0;
      }
    } else if (znak == '*') {
      if (stoi(ch) * stoi(ch2) == stoi(ch3)) {
        cout << i << endl;
        return 0;
      }
    } else if (znak == '-') {
      int e = stoi(ch) - stoi(ch2);
      if (abs(e) == stoi(ch3)) {
          cout << i << endl;
        return 0;
      }
    }
  }
  cout << "mistake" << endl;
}

/*
    ?00+52??=53??
*/
